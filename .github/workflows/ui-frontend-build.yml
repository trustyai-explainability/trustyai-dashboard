name: UI - Frontend - Test and Build
on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - ".github/workflows/ui-frontend-build.yml"
      - "!**/*.md"
      - "!**/*.txt"
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"
      - ".github/workflows/ui-frontend-build.yml"
      - "!**/*.md"
      - "!**/*.txt"

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run linting
        run: npm run lint
        working-directory: ./frontend

      - name: Run type checking
        run: npm run type-check
        working-directory: ./frontend

      - name: Run unit tests with coverage
        run: npm run test:coverage
        working-directory: ./frontend

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          directory: ./frontend/coverage
          fail_ci_if_error: false

      - name: Install Cypress and wait-on for e2e testing
        run: npm install cypress wait-on eslint-plugin-cypress --save-dev
        working-directory: ./frontend

      - name: Build frontend for e2e tests
        run: npm run build
        working-directory: ./frontend

      - name: Run Cypress e2e tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./frontend
          start: npm start
          wait-on: "http://localhost:8080"
          wait-on-timeout: 120
          browser: chrome

      - name: Clean frontend
        run: npm run clean
        working-directory: ./frontend

      - name: Final production build
        run: npm run build
        working-directory: ./frontend

      - name: Check for uncommitted changes
        run: |
          clean=$(git status --porcelain)
          if [[ -z "$clean" ]]; then
            echo "Empty git status --porcelain: $clean"
          else
            echo "Uncommitted file changes detected: $clean"
            git diff
            exit 1
          fi
